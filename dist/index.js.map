{"version":3,"file":"index.js","sources":["../src/cookie.ts","../src/keystore.ts","../src/cookies.ts"],"sourcesContent":["const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nconst SAME_SITE_REGEXP = /^(?:lax|none|strict)$/i;\n\nexport interface CookieAttrs {\n  expires?: Date;\n  maxAge?: number | null;\n  sameSite?: 'lax' | 'none' | 'strict' | boolean;\n  path?: string;\n  domain?: string;\n  secure?: boolean;\n  httpOnly?: boolean;\n  overwrite?: boolean;\n}\n\nexport class Cookie implements CookieAttrs {\n  name: string;\n  value: string;\n  domain?: string;\n  path = '/';\n  sameSite?: CookieAttrs['sameSite'] = false;\n  secure = false;\n  httpOnly = true;\n  overwrite = false;\n  expires?: Date;\n  maxAge?: number | null;\n\n  constructor(name: string, value: string | null, attrs: CookieAttrs) {\n    if (!fieldContentRegExp.test(name)) {\n      throw new TypeError('argument name is invalid');\n    }\n\n    if (value && !fieldContentRegExp.test(value)) {\n      throw new TypeError('argument value is invalid');\n    }\n\n    this.name = name;\n    this.value = value || '';\n\n    Object.assign(this, attrs)\n\n    if (!this.value) {\n      this.expires = new Date(0);\n      this.maxAge = null;\n    }\n\n    if (this.path && !fieldContentRegExp.test(this.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    if (this.domain && !fieldContentRegExp.test(this.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    if (this.sameSite && this.sameSite !== true && !SAME_SITE_REGEXP.test(this.sameSite)) {\n      throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  toString() {\n    return `${this.name}=${this.value}`;\n  }\n\n  get header() {\n    let header = this.toString();\n\n    if (this.maxAge) {\n      this.expires = new Date(Date.now() + this.maxAge);\n    }\n\n    if (this.path) {\n      header += `; path=${this.path}`;\n    }\n    if (this.expires) {\n      header += `; expires=${this.expires.toUTCString()}`;\n    }\n    if (this.domain) {\n      header += `; domain=${this.domain}`;\n    }\n    if (this.sameSite) {\n      header += `; samesite=${this.sameSite === true ? 'strict' : this.sameSite.toLowerCase()}`;\n    }\n    if (this.secure) {\n      header += '; secure';\n    }\n    if (this.httpOnly) {\n      header += '; httponly';\n    }\n\n    return header;\n  }\n\n}\n","import compare from 'tsscmp'\n\nimport crypto, {\n  BinaryToTextEncoding,\n  Cipher,\n  CipherCCMTypes,\n  CipherGCMTypes,\n  CipherKey,\n  Encoding\n} from \"crypto\";\n\nexport interface KeyStoreOpts {\n  signing?: {\n    keys: string[],\n    algorithm?: 'blake2b512' | 'blake2s256' | 'gost' | 'md4' | 'md5' | 'rmd160' | 'sha1' | 'sha224'\n      | 'sha256' | 'sha3-224' | 'sha3-256' | 'sha3-384' | 'sha3-512' | 'sha384' | 'sha512' | 'sha512-224'\n      | 'sha512-256' | 'shake128' | 'shake256' | 'sm3';\n    encoding?: BinaryToTextEncoding\n  },\n  encryption?: {\n    keys: string[] | CipherKey[],\n    algorithm?: string | CipherGCMTypes | CipherCCMTypes,\n    encoding?: Encoding\n    ivLength?: number;\n    ivSeparator?: string\n  }\n}\n\nexport class KeyStore {\n  encryption: Required<NonNullable<KeyStoreOpts['encryption']>>;\n  signing: Required<NonNullable<KeyStoreOpts['signing']>>;\n\n  constructor(opts: KeyStoreOpts = {}) {\n    if (opts.encryption) {\n      if (!opts.encryption.keys || opts.encryption.keys.length === 0) {\n        throw new Error(\"keys are required for encryption\")\n      }\n    }\n    if (opts.signing) {\n      if (!opts.signing.keys || opts.signing.keys.length === 0) {\n        throw new Error(\"keys are required for signing\")\n      }\n    }\n    this.encryption = Object.assign({\n      ivLength: 64,\n      algorithm: 'aes-256-gcm',\n      ivSeparator: '|',\n      encoding: 'utf-8'\n    }, opts.encryption || {} as any)\n    this.signing = Object.assign({encoding: 'utf-8', algorithm: 'sha256'}, opts.signing || {} as any)\n\n  }\n\n  encrypt(data: string | Buffer, key?: CipherKey) {\n    const opts = this.encryption\n    key = key || opts?.keys[0]\n\n    if (!key) {\n      throw new Error(\"no key found\")\n    }\n\n    const iv = crypto.randomBytes(opts.ivLength);\n    const cipher = crypto.createCipheriv(opts.algorithm, key, iv)\n\n    return this.crypt(cipher, data.toString('utf-8'))\n  }\n\n  crypt(cipher: Cipher, data: string | Buffer, iv?: string | Buffer) {\n    const {encoding, ivSeparator} = this.encryption\n    let text = cipher.update(data.toString(), encoding);\n    let pad = cipher.final();\n    return [\n      ...iv ? [iv.toString(encoding), ivSeparator] : [],\n      text.toString(encoding),\n      pad.toString(encoding)\n    ].join('')\n  }\n\n  decrypt(data?: string, key?: string | CipherKey, iv?: string | Buffer): string | null {\n    if (!data) {\n      return null\n    }\n\n    const {encoding, ivSeparator, keys, algorithm} = this.encryption\n\n    if (!iv) {\n      const dataParts = data.split(ivSeparator)\n      if (dataParts.length !== 2 || !dataParts[0] || !dataParts[1]) {\n        // TODO: maybe throw ??\n        return null;\n      }\n      iv = dataParts[0]\n      data = dataParts[1]\n    }\n\n    if(typeof iv === \"string\"){\n      iv = Buffer.from(iv, encoding)\n    }\n\n    if (!key) {\n      for (let i = 0; i < keys.length; i++) {\n        const message = this.decrypt(data, keys[i], iv);\n        if (message !== null) return message\n      }\n      return null\n    }\n\n    try {\n      const cipher = crypto.createDecipheriv(algorithm, key, iv);\n      return this.crypt(cipher, data)\n    } catch (err) {\n      return null\n    }\n  }\n\n  sign(data: string, key?: string | CipherKey) {\n    const { algorithm, encoding, keys } = this.signing\n    key = key || keys[0] as CipherKey\n    return crypto\n      .createHmac(algorithm, key)\n      .update(data).digest(encoding)\n      .replace(/\\/|\\+|=/g, function(x) {\n        return ({ \"/\": \"_\", \"+\": \"-\", \"=\": \"\" })[x] as string\n      })\n  }\n\n  verify(data: string, digest: string) {\n    return this.indexOf(data, digest) > -1\n  }\n\n  indexOf(data: string, digest: string) {\n    const { keys } = this.signing\n    for ( let i = 0; i < keys.length; i++) {\n      if (compare(digest, this.sign(data, keys[i] as string))) return i\n    }\n    return -1\n  }\n\n}\n\n\n","import http, { IncomingMessage, ServerResponse } from 'http';\nimport { Cookie, CookieAttrs } from './cookie';\nimport type {KeyStore} from \"./keystore\";\n\nconst cache: Record<string, any> = {};\n\nconst defaultSignOptions = { identifier: 'sig' };\n\nexport type CookiesOptions = {\n  keyStore?: KeyStore;\n  signed?: boolean;\n  encrypted?: boolean;\n  secure?: boolean;\n  encryptionOptions?: {\n    algorithm?: 'aes-128-ccm' | 'aes-192-ccm' | 'aes-256-ccm' | 'aes-128-gcm' | 'aes-192-gcm' | 'aes-256-gcm',\n    ivLength?: number\n    secret: string\n  };\n  signOptions?: {\n    identifier: string | ((name: string) => string)\n  }\n}\n\nexport class Cookies {\n  secure?: boolean | undefined;\n  encrypted: boolean;\n  signed: boolean;\n  request: IncomingMessage;\n  response: ServerResponse;\n  signOptions?: CookiesOptions['signOptions']\n  keyStore: KeyStore;\n  constructor(request: IncomingMessage, response: ServerResponse, options: CookiesOptions) {\n    this.request = request;\n    this.response = response;\n\n    if(!options?.keyStore){\n      throw new Error(\".keyStore is required\")\n    }\n    this.keyStore = options.keyStore;\n    this.secure = options.secure;\n    this.signed = options.signed !== undefined ? options.signed : false;\n    this.encrypted = options.encrypted !== undefined ? options.encrypted : false;\n    this.signOptions = Object.assign(defaultSignOptions, options.signOptions || {});\n  }\n\n  get(name: string, opts?: CookiesOptions) {\n    const signOptions = Object.assign(this.signOptions, opts?.signOptions || {});\n\n    const sigName =  typeof signOptions?.identifier === 'function' ?\n      signOptions.identifier.call(null, name)\n      : `${name + '.'+ (signOptions?.identifier || 'sig')}`;\n\n    const signed = opts && opts.signed !== undefined ? opts.signed : !!this.keyStore;\n\n    const encrypted = opts && opts.encrypted !== undefined ? opts.encrypted : this.encrypted;\n\n    const header = this.request.headers['cookie'];\n    if (!header) {\n      return undefined;\n    }\n\n    const match = header.match(getPattern(name));\n    if (!match) {\n      return undefined;\n    }\n\n    const value = match[1];\n    if (!opts || !signed) {\n      return encrypted ? this.keyStore.decrypt(value) : value;\n    }\n\n    const remote = this.get(sigName, { encrypted: false, signed: false });\n    if (!remote) {\n      return undefined;\n    }\n\n    const data = `${name}=${value}`;\n    if (!this.keyStore) {throw new Error('.keys required for signed cookies');}\n    const index = this.keyStore.indexOf(data, remote);\n\n    if (index < 0) {\n      this.set(sigName, null, { path: '/', signed: false });\n      return undefined\n    } else {\n      index && this.set(sigName, this.keyStore.sign(data), { signed: false });\n      return encrypted ? this.keyStore.decrypt(value) : value;\n    }\n  }\n\n  set(name: string, value: string | null, opts: CookiesOptions & CookieAttrs) {\n    const res = this.response;\n    const req = this.request;\n    let headers = (res.getHeader('Set-Cookie') || []) as string[];\n    // @ts-ignore\n    const secure = this.secure !== undefined ? !!this.secure : req['protocol'] === 'https' || req.connection['encrypted'];\n    const encrypted = opts && opts.encrypted !== undefined ? opts.encrypted : this.encrypted;\n\n    if(value !== null && encrypted){\n      value = this.keyStore.encrypt(value as string);\n    }\n\n    const cookie = new Cookie(name, value, opts);\n    const signed = opts && opts.signed !== undefined ? opts.signed : this.signed;\n\n    if (typeof headers == 'string') {\n      headers = [headers];\n    }\n\n    if (!secure && opts && opts.secure) {\n      throw new Error('Cannot send secure cookie over unencrypted connection');\n    }\n\n    cookie.secure = opts && opts.secure !== undefined\n      ? opts.secure\n      : secure;\n\n    pushCookie(headers, cookie);\n\n    if (opts && signed) {\n      if (!this.keyStore) { throw new Error('.keys required for signed cookies'); }\n      cookie.value = this.keyStore.sign(cookie.toString());\n\n      const signOptions = Object.assign(this.signOptions, opts?.signOptions || {});\n\n      cookie.name = typeof signOptions?.identifier === 'function' ?\n        signOptions.identifier.call(null, cookie.name)\n        : `${cookie.name + '.'+ (signOptions.identifier || 'sig')}`;\n      pushCookie(headers, cookie);\n    }\n\n    // @ts-ignore\n    const setHeader = res[\"set\"] ? http.OutgoingMessage.prototype.setHeader : res.setHeader;\n    setHeader.call(res, 'Set-Cookie', headers);\n    return this;\n  }\n\n  static middleware = (keyStore: KeyStore ) => (req: any, res: any, next: any) => {\n    req.cookies = res.cookies = new Cookies(req, res, {\n      keyStore\n    });\n\n    next();\n  }\n  static connect = Cookies.middleware\n  static express = Cookies.middleware\n}\n\n\nfunction getPattern(name: string) {\n  if (cache[name]) {return cache[name];}\n\n  return cache[name] = new RegExp(\n    `(?:^|;) *${name.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')}=([^;]*)`\n  );\n}\n\nfunction pushCookie(headers: string[], cookie: Cookie) {\n  if (cookie.overwrite) {\n    for (let i = headers.length - 1; i >= 0; i--) {\n      if (headers[i]!.indexOf(`${cookie.name}=`) === 0) {\n        headers.splice(i, 1);\n      }\n    }\n  }\n\n  headers.push(cookie.header);\n}\n"],"names":["crypto","compare","http"],"mappings":"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"}